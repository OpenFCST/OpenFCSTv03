=================
What is OpenFCST?
=================

The Open Fuel Cell Simulation Toolbox (OpenFCST) is an open-source mathematical modelling 
package for polymer electrolyte fuel cells. FCST builds on top of the open-source 
finite element libraries deal.II, therefore many of its requirements in terms 
of operating systems and such are the same as for deal.II. OpenFCST is distributed 
under the MIT License and has been developed as a modular toolbox from which 
you can develop your own applications. It contains a database of physical 
phenomena equations, fuel cell layers and materials, and kinetics mathematical 
models. In addition, it already contains several applications that allow you 
to simulate different fuel cell components. For example, you can simulate a cathode 
electrode (using either a macrohomogeneous or an ionomer-filled agglomerate model), 
an anode electrode, or a complete membrane electrode assembly. The applications are
already provided in OpenFCST and they have been validated with respect to experimental data 
in the literature as well as numerical results from other models implemented
in commercial packages.

OpenFCST is being developed at the Energy Systems Design Laboratory at the 
University of Alberta in collaboration with the Automotive Fuel Cell Cooperation Corp. 
that, together with the Natural Science and Engineering Research Council of Canada,
has provided the majority of the funding required to develop this code. The goal
of OpenFCST is that research groups in academia and in industry use the current 
toolbox to better understand fuel cells and to develop new physics and material 
databases that can then be integrated in the current library.

============
Requirements
============

OpenFCST is developed in a Linux operating system using the GNU GCC compiler. It supports GCC version 4.7 or later (4.8.1 recommened) 
    
OpenFCST comes with all required libraries except the optimization library Dakota from Sandia National
Labs (version 5.4_r2206). You can either download and install it yourself, place tar files in the
appropriate folder (specified below) following OpenFCST 
naming convention (specified below), or allow OpenFCST to download them for you if you have an
Internet connection.

===================================
Configuring and installing OpenFCST
===================================

To help with configuring OpenFCST with CMake, we provide a configuration script **openFCST_install**.
This way you do not have to input the necessary information into CMake directly. Instead, you can use various flags to allow
**openFCST_install** to set this information for you.

For information about the installation script options, type:

$./openFCST_install --help

For a typicall installation, enter the following:

$./openFCST_install --cores=<number of cores>
    
The current version of OpenFCST is shipped without the optimization package Dakota. If you want to install it, you will
need to download it from its website and then choose between the two installation options below. If you wish to install
p4est, Metis, PETSc, or deal.ii of versions different from the ones shipped with OpenFCST, please follow the same instructions.

NOTE: We currently do not provide any support related to the Dakota package. Current version of OpenFCST is shipped without
the optimization functionality. We are working on including one of the recent versions of Dakota in future releases of OpenFCST.

The first option is to install the packages yourself and have CMake find the installations using the following flags:
    
        i)   $./openFCST_install_CMake --p4est-dir=...
        ii)  $./openFCST_install_CMake --metis-dir=...
        iii) $./openFCST_install_CMake --petsc-dir=...
        iv)  $./openFCST_install_CMake --deal-dir=...
        v)   $./openFCST_install_CMake --dakota-dir=...
        
The second option is to have CMake install them for you. If the downloaded packages are not in tar.gz archive, then please
compress them in a .tar.gz files and then place them in their respective folders inside openfcst/src/contrib/. Make sure the
archives follow the naming convention:
    
        i)   p4est_vXXX.tar.gz
        ii)  Metis_vXXX.tar.gz
        iii) PETSc_vXXX.tar.gz
        iv)  deal.II_vXXX.tar.gz
        v)   Dakota_vXXX.tar.gz
        
Then specify the version number (vXXX) for each of these packages with their respective version number as follows:

    i)   $./openFCST_install_CMake --p4est-ver=vXXX
    ii)  $./openFCST_install_CMake --metis-ver=vXXX
    iii) $./openFCST_install_CMake --petsc-ver=vXXX
    iv)  $./openFCST_install_CMake --deal-ver=vXXX
    v)   $./openFCST_install_CMake --dakota-ver=vXXX
    
The default values that these flags are set to are the newest confirmed working versions. In this case,
you would not need to specify the version flag above. The newest confirmed working versions are:

    i)   --p4est-ver=v3.4.2
    ii)  --metis-ver=v5.1
    iii) --petsc-ver=v3.4.4
    iv)  --deal-ver=v8.4.1
    v)   --dakota-ver=v5.4_stable
    
Please note that, if you want OpenFCST to install your own downloaded version of Metis, you will need to change one line of 
to prevent errors. In the Makefile on line 67
it says: 

    make -C $(BUILDDIR) $@ $(MAKEFLAGS); \

change it to:

    make -C $(BUILDDIR) $@; \

This issue has been reported to the Metis community and will hopefully be fixed in the future, until then you will need
to do this to have the OpenFCST CMake script install Metis for you

If you get the following error near the end when you install OpenFCST,

    undefined reference to `PetscObjectQueryFunction'
    
then check the install log for PETSc (fcst/Build/contrib/PETSc/stamp/PETSc-install-out.log). At the end it, there should be an output
like the following:

    C/C++ example src/snes/examples/tutorials/ex19 run successfully with 1 MPI process
    C/C++ example src/snes/examples/tutorials/ex19 run successfully with 2 MPI processes
    Fortran example src/snes/examples/tutorials/ex5f run successfully with 1 MPI process
    
Most likely, one of these tests failed and you get an error in its place similar to:

    symbol lookup error: ./ex5f: undefined symbol
    
In this case, check to see if you need to update your OpenMPI compilers. If so, then update them and try a clean build. 

TIP: During the installation of OpenFCST, right after PETSc is done installing, check the
PETSc-install-out.log file and see if everything has worked. If not, then stop the installation process in order to save time.

Getting started:

===============       
Getting started
===============

See the user guide in src/doc/RefGuide/User_Guide.pdf. To launch a sample cathode simulation, go to the installation folder **Install** and source the
environment script. Then go to **examples/cathode/analysis** and execute the 2D OpenFCST binary:

  $ cd YourInstallDir
  $ source ./fcst_env.sh
  $ cd example/cathode/analysis
  $ fcst2D main.prm
  
This will run a cathode simulation with the simulation data parameters specified in **data.prm**.

=======
License
=======

Please see the file src/LICENSE or doc/LICENSE for details.

===================
Further information
===================

Visit http://www.openfcst.org.
